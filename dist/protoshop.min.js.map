{"version":3,"file":"protoshop.min.js","sources":["../src/util.js","../src/list.js","../src/panel.js","../index.js","../src/ProtoShop.js"],"sourcesContent":["export function noop() {}\n","import { noop } from './util';\n\n\nexport default class List {\n\n    constructor(parent) {\n        this.elem = document.createElement('ul');\n        this.elem.className = 'protoshop__list';\n\n        this.toggle = noop;\n\n        this._active = 'active';\n\n        parent.appendChild(this.elem);\n    }\n\n\n    append({ elem, text }) {\n        const item = document.createElement('li');\n\n        const eye = document.createElement('input');\n        eye.type = 'checkbox';\n\n        eye.addEventListener('click', () => {\n            const active = item.classList.contains(this._active);\n\n            if (active) {\n                item.classList.remove(this._active);\n            }\n            else {\n                item.classList.add(this._active);\n            }\n\n            this.toggle(elem, active);\n        });\n\n        const content = document.createElement('span');\n        content.innerText = text;\n\n        item.appendChild(eye);\n        item.appendChild(content);\n\n        this.elem.appendChild(item);\n    }\n\n}\n","export default class Panel {\n\n    constructor(parent, name) {\n        this.name = name;\n        this.elem = document.createElement('div');\n        this.elem.className = `protoshop__panel ${name}`;\n\n        this._attachTitle();\n\n        this.body = document.createElement('div');\n        this.body.className = 'protoshop__panel-body';\n        this.elem.appendChild(this.body);\n\n        parent.appendChild(this.elem);\n    }\n\n\n    _attachTitle() {\n        const title = document.createElement('div');\n        title.className = 'protoshop__panel-title';\n        title.innerText = this.name[0].toUpperCase() + this.name.substr(1, this.name.length);\n\n        title.addEventListener('mousedown', () => {\n\n        });\n\n        this.elem.appendChild(title);\n    }\n\n}\n","/**\n * ProtoShop\n */\n\nimport ProtoShop from './src/ProtoShop';\nimport './src/styles/protoshop.scss';\n\nexport default new ProtoShop();\n","import List from './list';\nimport Panel from './panel';\n\n\nexport default class ProtoShop {\n\n    constructor() {\n        this.elem = document.createElement('div');\n        this.elem.className = 'protoshop';\n\n        this.panels = {\n            artboards: this._constructArtboards(),\n            layers: this._constructLayers(),\n            phases: this._constructPhases(),\n        };\n\n        this._attachToggles();\n\n        document.querySelector('body').appendChild(this.elem);\n    }\n\n\n    _attachToggles() {\n        Array.from(document.querySelectorAll('*[data-toggle]')).forEach(elem => {\n            elem.addEventListener('click', () => {\n                if (elem.classList.contains(elem.dataset.toggle)) {\n                    elem.classList.remove(elem.dataset.toggle);\n                }\n                else {\n                    elem.classList.add(elem.dataset.toggle);\n                }\n            });\n        });\n    }\n\n\n    _constructArtboards() {\n        const panel = new Panel(this.elem, 'artboards');\n        const list = new List(panel.body);\n\n        Array.from(document.querySelectorAll('*[data-artboard]')).forEach((elem, i) => {\n            const text = typeof elem.dataset.artboard === 'string ' ? elem.dataset.artboard : `Artboard ${i + 1}`;\n\n            list.append({ elem, text });\n        });\n\n        return panel;\n    }\n\n\n    _constructLayers() {\n        const panel = new Panel(this.elem, 'layers');\n\n        return panel;\n    }\n\n\n     _constructPhases() {\n        const panel = new Panel(this.elem, 'phases');\n\n        return panel;\n    }\n\n};\n"],"names":["noop","List","constructor","parent","elem","document","createElement","className","toggle","_active","appendChild","this","append","text","item","eye","type","addEventListener","active","classList","contains","remove","add","content","innerText","Panel","name","_attachTitle","body","title","toUpperCase","substr","length","panels","artboards","_constructArtboards","layers","_constructLayers","phases","_constructPhases","_attachToggles","querySelector","Array","from","querySelectorAll","forEach","dataset","panel","list","i","artboard"],"mappings":"sCAAO,SAASA,WCGKC,EAEjBC,YAAYC,QACHC,KAAOC,SAASC,cAAc,WAC9BF,KAAKG,UAAY,uBAEjBC,OAASR,OAETS,QAAU,SAEfN,EAAOO,YAAYC,KAAKP,MAI5BQ,QAAOR,KAAEA,EAAFS,KAAQA,UACLC,EAAOT,SAASC,cAAc,MAE9BS,EAAMV,SAASC,cAAc,SACnCS,EAAIC,KAAO,WAEXD,EAAIE,iBAAiB,QAAS,WACpBC,EAASJ,EAAKK,UAAUC,SAAST,KAAKF,SAExCS,EACAJ,EAAKK,UAAUE,OAAOV,KAAKF,SAG3BK,EAAKK,UAAUG,IAAIX,KAAKF,cAGvBD,OAAOJ,EAAMc,WAGhBK,EAAUlB,SAASC,cAAc,QACvCiB,EAAQC,UAAYX,EAEpBC,EAAKJ,YAAYK,GACjBD,EAAKJ,YAAYa,QAEZnB,KAAKM,YAAYI,UC1CTW,EAEjBvB,YAAYC,EAAQuB,QACXA,KAAOA,OACPtB,KAAOC,SAASC,cAAc,YAC9BF,KAAKG,8BAAgCmB,SAErCC,oBAEAC,KAAOvB,SAASC,cAAc,YAC9BsB,KAAKrB,UAAY,6BACjBH,KAAKM,YAAYC,KAAKiB,MAE3BzB,EAAOO,YAAYC,KAAKP,MAI5BuB,qBACUE,EAAQxB,SAASC,cAAc,OACrCuB,EAAMtB,UAAY,yBAClBsB,EAAML,UAAYb,KAAKe,KAAK,GAAGI,cAAgBnB,KAAKe,KAAKK,OAAO,EAAGpB,KAAKe,KAAKM,QAE7EH,EAAMZ,iBAAiB,YAAa,aAI/Bb,KAAKM,YAAYmB,WCnBf,UCDX3B,mBACSE,KAAOC,SAASC,cAAc,YAC9BF,KAAKG,UAAY,iBAEjB0B,OAAS,CACVC,UAAWvB,KAAKwB,sBAChBC,OAAQzB,KAAK0B,mBACbC,OAAQ3B,KAAK4B,yBAGZC,iBAELnC,SAASoC,cAAc,QAAQ/B,YAAYC,KAAKP,MAIpDoC,iBACIE,MAAMC,KAAKtC,SAASuC,iBAAiB,mBAAmBC,QAAQzC,IAC5DA,EAAKa,iBAAiB,QAAS,KACvBb,EAAKe,UAAUC,SAAShB,EAAK0C,QAAQtC,QACrCJ,EAAKe,UAAUE,OAAOjB,EAAK0C,QAAQtC,QAGnCJ,EAAKe,UAAUG,IAAIlB,EAAK0C,QAAQtC,YAOhD2B,4BACUY,EAAQ,IAAItB,EAAMd,KAAKP,KAAM,aAC7B4C,EAAO,IAAI/C,EAAK8C,EAAMnB,aAE5Bc,MAAMC,KAAKtC,SAASuC,iBAAiB,qBAAqBC,QAAQ,CAACzC,EAAM6C,WAC/DpC,EAAwC,kBAA1BT,EAAK0C,QAAQI,SAAyB9C,EAAK0C,QAAQI,qBAAuBD,EAAI,IAElGD,EAAKpC,OAAO,CAAER,KAAAA,EAAMS,KAAAA,MAGjBkC,EAIXV,0BACkB,IAAIZ,EAAMd,KAAKP,KAAM,UAMtCmC,0BACiB,IAAId,EAAMd,KAAKP,KAAM"}